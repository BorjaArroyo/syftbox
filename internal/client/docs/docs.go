// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/status": {
            "get": {
                "description": "Returns the status of the service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Get status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/app/install": {
            "post": {
                "description": "Install an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "app"
                ],
                "summary": "Install app",
                "parameters": [
                    {
                        "description": "Install request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AppInstallRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    }
                }
            }
        },
        "/v1/app/list": {
            "get": {
                "description": "List all installed apps",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "app"
                ],
                "summary": "List apps",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AppListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    }
                }
            }
        },
        "/v1/app/uninstall": {
            "post": {
                "description": "Uninstall an app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "app"
                ],
                "summary": "Uninstall app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name",
                        "name": "appName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    }
                }
            }
        },
        "/v1/init/datasite": {
            "post": {
                "description": "Initialize the client with the given configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "init"
                ],
                "summary": "Initialize the client",
                "parameters": [
                    {
                        "description": "Initialize request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.InitDatasiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    }
                }
            }
        },
        "/v1/init/token": {
            "get": {
                "description": "Request an email validation token from the syftbox server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "init"
                ],
                "summary": "Get token",
                "parameters": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "url",
                        "description": "Server URL",
                        "name": "server_url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ControlPlaneError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AppInstallRequest": {
            "type": "object",
            "required": [
                "repoURL"
            ],
            "properties": {
                "branch": {
                    "description": "branch of the repo to install",
                    "type": "string"
                },
                "commit": {
                    "description": "commit of the repo to install",
                    "type": "string"
                },
                "force": {
                    "description": "force install",
                    "type": "boolean"
                },
                "repoURL": {
                    "description": "url of the github repo to install",
                    "type": "string"
                },
                "tag": {
                    "description": "tag of the repo to install",
                    "type": "string"
                }
            }
        },
        "handlers.AppListResponse": {
            "type": "object",
            "properties": {
                "apps": {
                    "description": "list of installed apps",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.ControlPlaneError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.ControlPlaneResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "handlers.InitDatasiteRequest": {
            "type": "object",
            "required": [
                "dataDir",
                "email",
                "serverUrl",
                "token"
            ],
            "properties": {
                "dataDir": {
                    "description": "datasite directory",
                    "type": "string"
                },
                "email": {
                    "description": "email of the user",
                    "type": "string"
                },
                "serverUrl": {
                    "description": "syftbox server url",
                    "type": "string"
                },
                "token": {
                    "description": "email token of the user",
                    "type": "string"
                }
            }
        },
        "handlers.StatusResponse": {
            "type": "object",
            "properties": {
                "buildDate": {
                    "description": "build date of the client.",
                    "type": "string"
                },
                "revision": {
                    "description": "revision of the client.",
                    "type": "string"
                },
                "status": {
                    "description": "health status (\"ok\").",
                    "type": "string"
                },
                "ts": {
                    "description": "timestamp when health check was performed.",
                    "type": "string"
                },
                "version": {
                    "description": "version of the client.",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "APIToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "APIToken": []
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.5.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "SyftBox Control Plane API",
	Description:      "HTTP API for interfacing with SyftBox",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
